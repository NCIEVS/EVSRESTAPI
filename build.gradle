buildscript {

    repositories {
        jcenter()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE"
    }
}

/*
 * Extra Properties
 */
ext {
     /*
     * Other third-party software versions
     */
     swaggerversion = "2.6.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'war'

group = "gov.nih.nci.evs.api"
version = "1.0.0-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

springBoot {
    backupSource = false // do not backup original jar to *.original
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    mavenCentral()
}



dependencies {
   
   
    compile 'org.springframework.boot:spring-boot-starter-web'       
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-actuator'
    compile 'org.projectlombok:lombok'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile "io.springfox:springfox-swagger2:$swaggerversion" 
    compile "io.springfox:springfox-swagger-ui:$swaggerversion"
    
     
   providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

   /*
     * Test Dependencies
   */
   testCompile 'org.springframework.boot:spring-boot-starter-test'
   

}

jar {
    baseName = project.name
    version =  project.version
    manifest {
        attributes 'Main-Class': 'main.java.gov.nih.nci.evs.api.Application'
    }
}

test {
    /*
     * Configure gradle to show standard out and standard error
     * of the test JVM(s) on the console
     */
    testLogging.showStandardStreams = true
}



task zipFile(type: Zip) {
    def zipFileRootDirectory = "${project.name}-${project.version}"

    from('src/main/bin') {
        fileMode = 0755
        into "$zipFileRootDirectory/bin"
    }
    from("$buildDir/main/bin") {
        fileMode = 0755
        include '**/createDirectoriesForWorkspace.pl'
        into "$zipFileRootDirectory/bin"
    }
    from('src/main/config') {
        into "${baseName}-${project.version}/config"
        into "$zipFileRootDirectory/config"
    }
    from("$buildDir/main/config") {
        include '**/createDirectories.properties'
        into "$zipFileRootDirectory/config"
    }
    from("$buildDir/libs") {
        include '*.*'
        into "$zipFileRootDirectory/lib"
    }
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

task bootJar
bootJar.dependsOn = [jar, bootRepackage]
build.dependsOn = [ bootJar, test, zipFile ]
install.dependsOn = [ bootJar,test, zipFile ]

/*
 * Wrapper task
 */
task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}
